

    
name: Demo 1 Github Actions/APIs/workflows

on: 
#   push:
#     branches: 
#     - main
  workflow_dispatch:

jobs: 
  Getting_User_logins:
    runs-on: ubuntu-latest
    steps:
    
# working on caching
    - uses: actions/checkout@v3
    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-


    - name: installing cache
      if: ${{ steps.cache-npm.outputs.cache-hit == 'true' }}
      run: npm install
      
    # Ripping logins from our org  (original without composite action)
    # - name: Get user logins from org
    #   env:
    #     SECRET_TOKEN: ${{ secrets.TOKEN }}
    #   run: | 
    #     npm install octokit
    #     node index.js "$SECRET_TOKEN"
    #     value=`cat output.json`
    #     echo $value

    # Ripping logins using composite actions
    - name: Get user logins using composite actions
      id: get-users
      env:
        SECRET_TOKEN: ${{ secrets.TOKEN }}
      uses: ImmortalHedgehogs/Demo1/getUsers@mainworkflow
      with:
        secret-token: $SECRET_TOKEN
      
    # placing output from composite action into output.json to upload artifact
    - run: echo ${{ steps.get-users.outputs.user-logins}} >> output.json



    # uploads user logins as an artifact 
    - uses: actions/upload-artifact@v3
      with:
        name: logins
        path: output.json
  
  create-repos:
    needs: Getting_User_logins
    uses: ImmortalHedgehogs/Demo1/.github/workflows/create-repos.yml@matrix-workflow
    secrets:
      inherit
